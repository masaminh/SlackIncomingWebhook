name: build-and-deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main    
permissions:
  id-token: write
  contents: read
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Test
        run: yarn test
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install sam-cli
        run: |
          python -m pip install --upgrade pip
          pip install awscli
          pip install aws-sam-cli
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Build
        run: yarn build
      - name: Configure AWS Credentials
        if: startsWith(github.ref, 'refs/heads/main')
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
          role-duration-seconds: 1200
          role-session-name: SlackIncomingWebHookApp
      - name: Deploy
        if: startsWith(github.ref, 'refs/heads/main')
        run: sam deploy --stack-name SlackIncomingWebHookAppProd --s3-bucket ${{ secrets.AWS_SAM_BUCKET_NAME }} --s3-prefix SlackIncomingWebHookAppProd --capabilities CAPABILITY_IAM --parameter-overrides "Stage=Prod MessageIdTableName=SlackIncomingMessageIdTableProd"
